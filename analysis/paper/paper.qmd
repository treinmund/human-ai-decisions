---
title: "Human-AI Decision-Making: A Generative Tool for Researchers"
author:
  - Tyler Reinmund:
      correspondence: "yes"
      email: tyler.reinmund@cs.ox.ac.uk
      orcid: 0000-0002-9249-7688
      institute:
        - name: University of Oxford
  - Catarina Barino:
      email: catarina.barino@gmail.com
title-block-published: "Last updated"  
date: now
date-format: long
format: 
  docx:
    reference-doc: "../templates/template.docx" # Insert path for the DOCX file
execute:
  echo: true
  warning: false
  message: false
  comment: "#>"
  fig-path: "../figures/"
  fig-dpi: 600
filters:
  - ../templates/scholarly-metadata.lua
  - ../templates/author-info-blocks.lua
  - ../templates/pagebreak.lua
bibliography: references.bib
csl: "../templates/acm-sigchi-proceedings.csl" # Insert path for the bib-style
abstract: |
  Text of abstract
keywords: |
  keyword 1; keyword 2; keyword 3
highlights: |
  These are the highlights. 
---

<!-- This is the format for text comments that will be ignored during renderings. Do not put R code in these comments because it will not be ignored. -->

<!-- With the following code you can access and display values from the yml header above. -->

Keywords: `r rmarkdown::metadata$keywords`

Highlights: `r rmarkdown::metadata$highlights`

<!-- The actual document text starts here: -->

# Introduction

Here is a citation [@Marwick2017]

# Background

This project aims to leverage large language models to support researchers in the area of human-AI decision-making with research activities. Specifically, it will enable researchers to:

* Brainstorm research questions.
* Prepare research plans for studies.
* Draft paper outlines.

To accomplish this, we will use a pre-trained model and fine tune it for the domain of human-AI decision-making.

# Methods

## Data Collection

We will generate a corpus of human-AI decision-making research publications:

1. Identify formative articles from existing research efforts.
2. Collect additional formative articles from past literature reviews.
3. Crawl citations from Google Scholar.



# Results

<!-- Here's some example analysis code: -->

```{r}
#| label: get-data
#| eval: false
# Note the path that we need to use to access our data files when rendering this document
my_data <- read.csv(here::here('analysis/data/raw_data/my_csv_file.csv'))
```

```{r}
#| label: fig-demo-plot
#| fig-cap: "A plot of random numbers"
plot(rnorm(10))
```

Figure @fig-demo-plot shows how we can have a caption and cross-reference for a plot. Note that figure label and cross-references must both be prefixed with `fig-`

```{r}
#| label: demo-inline-code
#| echo: false
x <- round(pi, 2)
```

Here is an example of inline code `r x` in the middle of a sentence.

# Discussion

# Conclusion

# Acknowledgements

<!-- The following line inserts a page break  -->

\newpage

# References

<!-- The following line ensures the references appear here for the MS Word or HTML output files, rather than right at the end of the document (this will not work for PDF files):  -->

::: {#refs}
:::

\newpage

### Colophon

This report was generated on `r Sys.time()` using the following computational environment and dependencies:

```{r}
#| label: colophon
#| cache: false

# which R packages and versions?
if ("devtools" %in% installed.packages()) devtools::session_info()
```

The current Git commit details are:

```{r}
# what commit is this file at? 
if ("git2r" %in% installed.packages() & git2r::in_repository(path = ".")) git2r::repository(here::here())  
```
